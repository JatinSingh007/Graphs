from collections import defaultdict
from math import sqrt,factorial,gcd,log2
# map(int,input().split())
# l = list(map(int,input().split()))
import sys
sys.setrecursionlimit(10**9)

def find_parent(u):
    if par[u]!=u:
        par[u]=find_parent(par[u])
    return par[u]

n,k = map(int,input().split())

l = []

par = [0]+[i+1 for i in range(n)]

g = []
rank = [1]*(n+1)

ans = 0
for i in range(k):
    a,b = map(int,input().split())
    a+=1
    b+=1
    z1,z2 = find_parent(a),find_parent(b)
    if z1!=z2:
        if rank[z1]>rank[z2]:
            z2,z1 = z1,z2
        rank[z2]+=rank[z1]
        par[z1] = z2

seti = set()

for i in range(1,n+1):
    z = find_parent(i)
    seti.add(z)
mod = 10**9 + 7
ans = 1
for i in seti:
    ans*=factorial(rank[i])
print(ans%mod)
