from collections import defaultdict
from math import inf
def find_parent(u):
    if par[u]!=u:
        par[u]=find_parent(par[u])
    return par[u]

hash = defaultdict(int)

n,q = map(int,input().split())
par = [0]+[i+1 for i in range(n)]
rank = [1]*(n+1)

seti = set()

hash[1] = n
cur = 0
maxi = 0
for i in range(q):
    a,b = map(int,input().split())
    z1,z2 = find_parent(a),find_parent(b)
    ans = inf
    if z1!=z2:
     if rank[z1]>rank[z2]:
        z1,z2 = z2,z1
     hash[rank[z1]]-=1
     hash[rank[z2]]-=1
     if hash[rank[z1]] == 0:
        del hash[rank[z1]]
     if hash[rank[z2]] == 0:
        del hash[rank[z2]]
     hash[rank[z1]+rank[z2]]+=1

     rank[z2]+=rank[z1]
     par[z1] = z2
     prev = -1
     ans = inf


     for i in sorted(hash):
        if hash[i]>1:
            ans = 0
            break
        else:
            if prev == -1:
                 prev = i
            else:
                ans = min(ans,abs(prev-i))
            prev = i
     if len(hash) == 1:
        ans = 0
     cur = ans
     print(ans)
    else:
        print(cur)


