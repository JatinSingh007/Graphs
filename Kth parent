

from collections import defaultdict

n,k = map(int,input().split())

dp = []

for i in range(n+1):
    k1 = [-1]*(22)
    dp.append(k1)

def dfs(n):

    bool[n] = True

    for i in hash[n]:
        if not bool[i]:
            dp[i][0] = n
            dfs(i)

def build():

    for j in range(1,22):
        for i in range(1,n+1):

           if dp[i][j-1] !=-1:


             dp[i][j] = dp[dp[i][j-1]][j-1]

           else:
               dp[i][j] = -1




l = list(map(int,input().split()))

hash = defaultdict(list)

for i in range(n-1):
    a,b = map(int,input().split())

    hash[a].append(b)
    hash[b].append(a)

bool = [False]*(n+1)

par = [0] + [i+1 for i in range(n)]

dfs(1)
dp[1][0] = -1

build()
# print(dp)
def find_kth(u,k):


    for i in range(22,-1,-1):

        if (1<<i <=k):
            # print(i,u,k)
            u = dp[u][i]
            k-=(1<<i)



    return u


ans = []

for i in range(1,n+1):

    z = find_kth(i,k)
    if z!=-1:
      if l[i-1] == l[z-1]:
         ans.append(z)
      else:
          ans.append(-1)
    else:
        ans.append(-1)
print(*ans)
