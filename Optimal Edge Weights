from collections import defaultdict
from math import sqrt,factorial,gcd,log2,inf,ceil
# map(int,input().split())
# l = list(map(int,input().split()))
import sys
sys.setrecursionlimit(10**9)


def dfs(n):

    boo[n] = True
    dp[n] = 1
    for i in hash[n]:
        if not boo[i]:

            dfs(i)
            dp[n]+=dp[i]

def dfs1(n):

    boo[n] = True

    for i in hash[n]:
        if not boo[i]:



            dfs1(i)
            z = (dp[1] - dp[i])*(dp[i])
            sa.append(z)




mod = 10**9 + 7

n,x = map(int,input().split())

hash = defaultdict(list)
for i in range(n):
    a,b = map(int,input().split())
    hash[a].append(b)
    hash[b].append(a)
boo = [False]*(n+2)
l = list(map(int,input().split()))
l.sort(reverse=True)
dp = [0]*(n+2)
dfs(1)
sa = []
boo = [False]*(n+2)

dfs1(1)
sa.sort(reverse=True)
ans = 0
for i in range(n):
    ans+=sa[i]*(l[i])
# print(sa)
print(ans)



