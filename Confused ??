
def dfs(n):
    bool[n] = True
    ans[z-1].add(n)
    for i in g[n]:
        if bool[i] == False:
          dfs(i)


from collections import defaultdict

n,m,q = map(int,input().split())

cost = list(map(int,input().split()))

hash = defaultdict(int)
g = defaultdict(set)
la = []
ans = [set() for i in range(m)]
for i in range(q):

    t,a,b = map(int,input().split())
    if t == 2:
       g[a].add(b)
       g[b].add(a)

    else:
        # print(b)
        hash[a] = b

bool = [False]*(n+1)
ans = [set() for i in range(m)]

for i in range(1,n+1):

    if hash[i]!=0 and bool[i] == False:

        z = hash[i]
        dfs(i)


yo = 0
final = [0]*(n+1)
count = 0
for i in range(len(ans)):
    yo = 0
    if len(ans[i])!=0:
        yo+=cost[i]/(len(ans[i]))
        count+=1
    for j in ans[i]:
        final[j] = yo
print(count)
for i in final[1:]:
    print(i)
